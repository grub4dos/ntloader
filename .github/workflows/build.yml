name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    steps:
    - name: Run git checkout
      uses: actions/checkout@v4
    - name: Build README.md
      run: |
        make -C docs
    - name: Create PDF
      uses: BaileyJM02/markdown-to-pdf@v1
      with:
        input_path: docs/README.md
        output_dir: build
        images_dir: docs/images
        image_import: ./images
        build_html: false
        table_of_contents: false
    - name: Upload PDF
      uses: actions/upload-artifact@v4
      with:
        name: README.pdf
        path: build/README.pdf

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: generate-docs
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install packages
        run: |
          sudo apt update
          sudo apt install -y -o Acquire::Retries=50 \
                           build-essential gcc-mingw-w64 gcc-aarch64-linux-gnu
      - name: Build NTloader
        run: |
          make
      - name: Build initrd
        run: |
          make mkinitrd.exe
          make initrd.cpio
      - name: Build fsuuid.exe
        run: |
          make fsuuid.exe
      - name: Build bmtool.exe
        run: |
          make bmtool.exe
      - name: Copy files
        run: |
          mkdir -p build
          cp ntloader build/
          cp ntloader.i386 build/
          cp ntloader.arm64 build/
          cp initrd.cpio build/
          cp fsuuid.exe build/
          cp bmtool.exe build/
          cp mkinitrd.exe build/
          cp utils/bcd.bat build/
      - name: Download README.pdf
        uses: actions/download-artifact@v4
        with:
          name: README.pdf
          path: build
      - name: Create package
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: 'ntloader.zip'
          directory: 'build'
          path: '.'
      - name: Delete old release
        continue-on-error: true
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          gh release delete latest --cleanup-tag --yes
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Release
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          gh release create latest build/ntloader.zip -t "Development Build" -p
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
